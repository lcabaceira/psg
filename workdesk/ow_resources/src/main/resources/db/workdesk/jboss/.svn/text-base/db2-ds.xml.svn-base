<?xml version="1.0" encoding="UTF-8"?>

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  JBoss Server Configuration                                           -->
<!--                                                                       -->
<!-- ===================================================================== -->

<!-- $Id: oracle-ds.xml,v 1.1.2.4 2003/09/17 03:46:01 ejort Exp $ -->
<!-- ==================================================================== -->
<!--  Datasource config for Oracle originally from Steven Coy             -->
<!-- ==================================================================== -->


<datasources>
  <local-tx-datasource>
    <jndi-name>DB2DS</jndi-name>
    <connection-url>jdbc:db2://--insert-your-servername-here--:50000/--insert-your-database-here--</connection-url>
        <!--
        Here are a couple of the possible OCI configurations.
        For more information, see http://otn.oracle.com/docs/products/oracle9i/doc_library/release2/java.920/a96654/toc.htm

        <connection-url>jdbc:oracle:oci:@youroracle-tns-name</connection-url>
        or
        <connection-url>jdbc:oracle:oci:@(description=(address=(host=youroraclehost)(protocol=tcp)(port=1521))(connect_data=(SERVICE_NAME=yourservicename)))</connection-url>

        Clearly, its better to have TNS set up properly.
        -->
    <driver-class>com.ibm.db2.jcc.DB2Driver</driver-class>
    <user-name>--insert-your-username-here--</user-name>
    <password>--insert-your-password-here--</password>
        <!-- Uses the pingDatabase method to check a connection is still valid before handing it out from the pool -->
        <!-- valid-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker</valid-connection-checker-class-name-->
        <!-- Checks the Oracle error codes and messages for fatal errors -->
    <exception-sorter-class-name>org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter</exception-sorter-class-name>
        <!-- SQL to call when connection is created
        <new-connection-sql>some arbitrary sql</new-connection-sql>
        -->

        <!-- SQL to call on an existing pooled connection when it is obtained from pool - the OracleValidConnectionChecker is preferred
        <check-valid-connection-sql>some arbitrary sql</check-valid-connection-sql>
        -->
    <min-pool-size>5</min-pool-size>
    <max-pool-size>20</max-pool-size>
    <blocking-timeout-millis>5000</blocking-timeout-millis>
    <idle-timeout-minutes>5</idle-timeout-minutes>
  </local-tx-datasource>
</datasources>